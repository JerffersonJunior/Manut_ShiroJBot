/*
 * This file is part of Shiro J Bot.
 * Copyright (C) 2019-2021  Yago Gimenez (KuuHaKu)
 *
 * Shiro J Bot is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Shiro J Bot is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Shiro J Bot.  If not, see <https://www.gnu.org/licenses/>
 */
//file:noinspection DifferentStdlibGradleVersion
//file:noinspection GroovyUnusedAssignment
//file:noinspection GroovyAssignabilityCheck

buildscript {
	repositories {
		mavenCentral()
	}
}

plugins {
	id "java"
	id "idea"
	id "antlr"
	id "application"
	id "com.github.ben-manes.versions" version "0.51.0"
}

application {
	getMainClass().set("com.kuuhaku.Main")
	applicationDefaultJvmArgs = [
			"-Xms512M",
			"-Xmx2G",
			"-XX:MaxDirectMemorySize=2G",
			"-XX:+UseZGC",
			"-XX:+HeapDumpOnOutOfMemoryError",
			"-XX:HeapDumpPath=/shiro/ShiroJBot/logs/memdump.hprof",
			"-Dfile.encoding=UTF-8",
			"-Duser.timezone=America/Sao_Paulo",
			"-Djava.awt.headless=true",
			"-Dsun.java2d.opengl=True",
			"-Dlog4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector"
//			,"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:55000"
	]
}

group "com.kuuhaku"
version "STANDALONE"

def javaVersion = JavaVersion.VERSION_21
java {
	sourceCompatibility = javaVersion
	targetCompatibility = javaVersion
}

repositories {
	mavenCentral()
	maven { url "https://jitpack.io" }
	maven { url "https://m2.dv8tion.net/releases" }
	maven { url "https://oss.sonatype.org/content/repositories/releases/" }
}

run {
	standardInput = System.in
	dependsOn generateGrammarSource
}

tasks.withType(JavaCompile).configureEach {
	options.compilerArgs
			<< "-Xlint:unchecked"
			<< "-Xlint:deprecation"

	dependsOn enforceVersion
}

tasks.withType(GroovyCompile).configureEach {
	groovyOptions.optimizationOptions.indy = true
}

tasks.register("enforceVersion") {
	def foundVersion = JavaVersion.current()
	if (foundVersion != javaVersion) {
		throw new IllegalStateException("Wrong Java version; required is $javaVersion, but found $foundVersion")
	}
}

dependencies {
	//Core
	implementation group: "net.dv8tion", name: "JDA", version: "5.0.0-beta.20"
	implementation group: "com.github.ygimenez", name: "Pagination-Utils", version: "4.0.6"
	implementation group: "com.github.ygimenez", name: "Simple-Moshi", version: "9a75a36"

	//Database
	implementation group: "org.postgresql", name: "postgresql", version: "42.7.2"
	implementation group: "org.hibernate.orm", name: "hibernate-core", version: "6.4.4.Final"
	implementation group: "com.mchange", name: "c3p0", version: "0.10.0"
	implementation group: "org.hibernate.orm", name: "hibernate-c3p0", version: "6.4.4.Final"

	//Compiler
	implementation group: "org.apache.groovy", name: "groovy", version: "4.0.19"

	//Websocket
	implementation group: "org.java-websocket", name: "Java-WebSocket", version: "1.5.6"

	//Wrappers
	implementation group: "com.graphql-java", name: "graphql-java", version: "21.3"
	implementation group: "club.minnced", name: "discord-webhooks", version: "0.8.4"

	//Apache Commons
	implementation group: "org.apache.commons", name: "commons-lang3", version: "3.14.0"
	implementation group: "org.apache.commons", name: "commons-text", version: "1.11.0"
	implementation group: "org.apache.commons", name: "commons-math3", version: "3.6.1"
	implementation group: "org.apache.commons", name: "commons-imaging", version: "1.0-alpha3"
	implementation group: "org.apache.commons", name: "commons-compress", version: "1.26.0"
	implementation group: "org.apache.httpcomponents", name: "httpclient", version: "4.5.14"
	implementation group: "commons-validator", name: "commons-validator", version: "1.8.0"
	implementation group: "commons-codec", name: "commons-codec", version: "1.16.1"
	implementation group: "commons-cli", name: "commons-cli", version: "1.6.0"
	implementation group: "commons-io", name: "commons-io", version: "2.15.1"

	//Logger
	implementation group: "org.slf4j", name: "slf4j-api", version: "2.0.12"
	implementation group: "org.apache.logging.log4j", name: "log4j-api", version: "2.23.0"
	implementation group: "org.apache.logging.log4j", name: "log4j-core", version: "2.23.0"
	implementation group: "org.apache.logging.log4j", name: "log4j-slf4j-impl", version: "2.23.0"
	implementation group: "org.apache.logging.log4j", name: "log4j-jcl", version: "2.23.0"
	implementation group: "com.lmax", name: "disruptor", version: "4.0.0"

	//Util
	implementation group: "it.sauronsoftware.cron4j", name: "cron4j", version: "2.2.5"
	implementation group: "org.swinglabs.swingx", name: "swingx-graphics", version: "1.6.5-1"
	implementation group: "net.oneandone.reflections8", name: "reflections8", version: "0.11.7"
	implementation group: "com.squareup.okio", name: "okio", version: "3.8.0"
	implementation group: "io.github.furstenheim", name: "copy_down", version: "1.1"
	implementation group: "net.jodah", name: "expiringmap", version: "0.5.11"
	implementation group: "me.xuender", name: "unidecode", version: "0.0.7"
	implementation group: "com.github.sbesada", name: "java.math.expression.parser", version: "3.3.0"
	implementation group: "org.tukaani", name: "xz", version: "1.9"
	implementation group: "org.ehcache", name: "ehcache", version: "3.10.8"
	implementation group: "com.vdurmont", name: "emoji-java", version: "5.1.1"
	implementation group: "org.shredzone.commons", name: "commons-suncalc", version: "3.10"
	implementation group: "org.knowm.xchart", name: "xchart", version: "3.8.7"
	implementation group: "com.github.trickl", name: "palette", version: "0.1.1"
	implementation group: "org.jetbrains", name: "annotations", version: "24.1.0"

	//Unit test
	testImplementation group: "org.junit.jupiter", name: "junit-jupiter", version: "5.10.2"

	//Antlr
	antlr group: "org.antlr", name: "antlr4", version: "4.13.1"
	implementation group: "org.antlr", name: "antlr4-runtime", version: "4.13.1"
}

idea {
	module {
		downloadJavadoc = true
		downloadSources = true
	}
}

sourceSets.main {
	java.srcDirs = files(
			"src/main/java",
			"src/main/antlr"
	)
}

jar {
	duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}

test {
	useJUnitPlatform()
}

generateGrammarSource {
	outputDirectory = file("src/main/antlr/com/kuuhaku/generated")
}
